{"$message_type":"future_incompat","future_incompat_report":[{"diagnostic":{"$message_type":"diagnostic","message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"/home/user/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.12.15/src/parsers.rs","byte_start":33692,"byte_end":33693,"line_start":1208,"line_end":1208,"column_start":41,"column_end":42,"is_primary":true,"text":[{"text":"        tap!($i, $name: call!($f) => $e);","highlight_start":41,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/user/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.12.15/src/parsers.rs","byte_start":24522,"byte_end":24546,"line_start":875,"line_end":875,"column_start":15,"column_end":39,"is_primary":false,"text":[{"text":"        match $subrule!($i, $($args)*) {","highlight_start":15,"highlight_end":39}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/user/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.12.15/src/parsers.rs","byte_start":13692,"byte_end":13718,"line_start":465,"line_end":465,"column_start":19,"column_end":45,"is_primary":false,"text":[{"text":"            match $submac!(input, $($args)*) {","highlight_start":19,"highlight_end":45}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/user/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.12.15/src/parsers.rs","byte_start":27327,"byte_end":27350,"line_start":973,"line_end":973,"column_start":15,"column_end":38,"is_primary":false,"text":[{"text":"        match $submac!($i, $($args)*) {","highlight_start":15,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/user/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.12.15/src/parsers.rs","byte_start":28508,"byte_end":28531,"line_start":1006,"line_end":1006,"column_start":17,"column_end":40,"is_primary":false,"text":[{"text":"                do_parse!(i, $($rest)*)","highlight_start":17,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/user/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.12.15/src/parsers.rs","byte_start":2879,"byte_end":2901,"line_start":83,"line_end":83,"column_start":13,"column_end":35,"is_primary":false,"text":[{"text":"            $submac!(i, $($args)*)","highlight_start":13,"highlight_end":35}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/user/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.12.15/src/expr.rs","byte_start":48613,"byte_end":49351,"line_start":1501,"line_end":1523,"column_start":5,"column_end":7,"is_primary":false,"text":[{"text":"    named!(trailer_expr(allow_struct: bool, allow_block: bool) -> Expr, do_parse!(","highlight_start":5,"highlight_end":83},{"text":"        mut e: call!(atom_expr, allow_struct, allow_block) >>","highlight_start":1,"highlight_end":62},{"text":"        many0!(alt!(","highlight_start":1,"highlight_end":21},{"text":"            tap!(args: and_call => {","highlight_start":1,"highlight_end":37},{"text":"                e = ExprCall {","highlight_start":1,"highlight_end":31},{"text":"                    attrs: Vec::new(),","highlight_start":1,"highlight_end":39},{"text":"                    func: Box::new(e),","highlight_start":1,"highlight_end":39},{"text":"                    paren_token: args.0,","highlight_start":1,"highlight_end":41},{"text":"                    args: args.1,","highlight_start":1,"highlight_end":34},{"text":"                }.into();","highlight_start":1,"highlight_end":26},{"text":"            })","highlight_start":1,"highlight_end":15},{"text":"            |","highlight_start":1,"highlight_end":14},{"text":"            tap!(i: and_index => {","highlight_start":1,"highlight_end":35},{"text":"                e = ExprIndex {","highlight_start":1,"highlight_end":32},{"text":"                    attrs: Vec::new(),","highlight_start":1,"highlight_end":39},{"text":"                    expr: Box::new(e),","highlight_start":1,"highlight_end":39},{"text":"                    bracket_token: i.0,","highlight_start":1,"highlight_end":40},{"text":"                    index: Box::new(i.1),","highlight_start":1,"highlight_end":42},{"text":"                }.into();","highlight_start":1,"highlight_end":26},{"text":"            })","highlight_start":1,"highlight_end":15},{"text":"        )) >>","highlight_start":1,"highlight_end":14},{"text":"        (e)","highlight_start":1,"highlight_end":12},{"text":"    ));","highlight_start":1,"highlight_end":7}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"named!","def_site_span":{"file_name":"/home/user/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.12.15/src/parsers.rs","byte_start":2160,"byte_end":2178,"line_start":66,"line_end":66,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! named {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"do_parse!","def_site_span":{"file_name":"/home/user/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.12.15/src/parsers.rs","byte_start":27019,"byte_end":27040,"line_start":963,"line_end":963,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! do_parse {","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"do_parse!","def_site_span":{"file_name":"/home/user/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.12.15/src/parsers.rs","byte_start":27019,"byte_end":27040,"line_start":963,"line_end":963,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! do_parse {","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"many0!","def_site_span":{"file_name":"/home/user/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.12.15/src/parsers.rs","byte_start":13362,"byte_end":13380,"line_start":453,"line_end":453,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! many0 {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"alt!","def_site_span":{"file_name":"/home/user/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.12.15/src/parsers.rs","byte_start":24331,"byte_end":24347,"line_start":869,"line_end":869,"column_start":1,"column_end":17,"is_primary":false,"text":[{"text":"macro_rules! alt {","highlight_start":1,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"tap!","def_site_span":{"file_name":"/home/user/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.12.15/src/parsers.rs","byte_start":33183,"byte_end":33199,"line_start":1194,"line_end":1194,"column_start":1,"column_end":17,"is_primary":false,"text":[{"text":"macro_rules! tap {","highlight_start":1,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"macro invocations at the end of a block are treated as expressions","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to ignore the value produced by the macro, add a semicolon after the invocation of `tap`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/user/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.12.15/src/parsers.rs:1208:41\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1208\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m        tap!($i, $name: call!($f) => $e);\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/user/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.12.15/src/expr.rs:1501:5\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1501\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m    named!(trailer_expr(allow_struct: bool, allow_block: bool) -> Expr, do_parse!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1502\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        mut e: call!(atom_expr, allow_struct, allow_block) >>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1503\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        many0!(alt!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1504\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            tap!(args: and_call => {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1522\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        (e)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1523\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    ));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|______-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: macro invocations at the end of a block are treated as expressions\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: to ignore the value produced by the macro, add a semicolon after the invocation of `tap`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `tap` which comes from the expansion of the macro `named` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"$message_type":"diagnostic","message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"/home/user/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.12.15/src/parsers.rs","byte_start":33692,"byte_end":33693,"line_start":1208,"line_end":1208,"column_start":41,"column_end":42,"is_primary":true,"text":[{"text":"        tap!($i, $name: call!($f) => $e);","highlight_start":41,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/user/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.12.15/src/parsers.rs","byte_start":25693,"byte_end":25717,"line_start":911,"line_end":911,"column_start":9,"column_end":33,"is_primary":false,"text":[{"text":"        $subrule!($i, $($args)*)","highlight_start":9,"highlight_end":33}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/user/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.12.15/src/parsers.rs","byte_start":24621,"byte_end":24640,"line_start":877,"line_end":877,"column_start":18,"column_end":37,"is_primary":false,"text":[{"text":"            _ => alt!($i, $($rest)*)","highlight_start":18,"highlight_end":37}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/user/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.12.15/src/parsers.rs","byte_start":13692,"byte_end":13718,"line_start":465,"line_end":465,"column_start":19,"column_end":45,"is_primary":false,"text":[{"text":"            match $submac!(input, $($args)*) {","highlight_start":19,"highlight_end":45}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/user/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.12.15/src/parsers.rs","byte_start":27327,"byte_end":27350,"line_start":973,"line_end":973,"column_start":15,"column_end":38,"is_primary":false,"text":[{"text":"        match $submac!($i, $($args)*) {","highlight_start":15,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/user/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.12.15/src/parsers.rs","byte_start":28508,"byte_end":28531,"line_start":1006,"line_end":1006,"column_start":17,"column_end":40,"is_primary":false,"text":[{"text":"                do_parse!(i, $($rest)*)","highlight_start":17,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/user/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.12.15/src/parsers.rs","byte_start":2879,"byte_end":2901,"line_start":83,"line_end":83,"column_start":13,"column_end":35,"is_primary":false,"text":[{"text":"            $submac!(i, $($args)*)","highlight_start":13,"highlight_end":35}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/user/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.12.15/src/expr.rs","byte_start":48613,"byte_end":49351,"line_start":1501,"line_end":1523,"column_start":5,"column_end":7,"is_primary":false,"text":[{"text":"    named!(trailer_expr(allow_struct: bool, allow_block: bool) -> Expr, do_parse!(","highlight_start":5,"highlight_end":83},{"text":"        mut e: call!(atom_expr, allow_struct, allow_block) >>","highlight_start":1,"highlight_end":62},{"text":"        many0!(alt!(","highlight_start":1,"highlight_end":21},{"text":"            tap!(args: and_call => {","highlight_start":1,"highlight_end":37},{"text":"                e = ExprCall {","highlight_start":1,"highlight_end":31},{"text":"                    attrs: Vec::new(),","highlight_start":1,"highlight_end":39},{"text":"                    func: Box::new(e),","highlight_start":1,"highlight_end":39},{"text":"                    paren_token: args.0,","highlight_start":1,"highlight_end":41},{"text":"                    args: args.1,","highlight_start":1,"highlight_end":34},{"text":"                }.into();","highlight_start":1,"highlight_end":26},{"text":"            })","highlight_start":1,"highlight_end":15},{"text":"            |","highlight_start":1,"highlight_end":14},{"text":"            tap!(i: and_index => {","highlight_start":1,"highlight_end":35},{"text":"                e = ExprIndex {","highlight_start":1,"highlight_end":32},{"text":"                    attrs: Vec::new(),","highlight_start":1,"highlight_end":39},{"text":"                    expr: Box::new(e),","highlight_start":1,"highlight_end":39},{"text":"                    bracket_token: i.0,","highlight_start":1,"highlight_end":40},{"text":"                    index: Box::new(i.1),","highlight_start":1,"highlight_end":42},{"text":"                }.into();","highlight_start":1,"highlight_end":26},{"text":"            })","highlight_start":1,"highlight_end":15},{"text":"        )) >>","highlight_start":1,"highlight_end":14},{"text":"        (e)","highlight_start":1,"highlight_end":12},{"text":"    ));","highlight_start":1,"highlight_end":7}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"named!","def_site_span":{"file_name":"/home/user/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.12.15/src/parsers.rs","byte_start":2160,"byte_end":2178,"line_start":66,"line_end":66,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! named {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"do_parse!","def_site_span":{"file_name":"/home/user/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.12.15/src/parsers.rs","byte_start":27019,"byte_end":27040,"line_start":963,"line_end":963,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! do_parse {","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"do_parse!","def_site_span":{"file_name":"/home/user/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.12.15/src/parsers.rs","byte_start":27019,"byte_end":27040,"line_start":963,"line_end":963,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! do_parse {","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"many0!","def_site_span":{"file_name":"/home/user/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.12.15/src/parsers.rs","byte_start":13362,"byte_end":13380,"line_start":453,"line_end":453,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! many0 {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"alt!","def_site_span":{"file_name":"/home/user/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.12.15/src/parsers.rs","byte_start":24331,"byte_end":24347,"line_start":869,"line_end":869,"column_start":1,"column_end":17,"is_primary":false,"text":[{"text":"macro_rules! alt {","highlight_start":1,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"alt!","def_site_span":{"file_name":"/home/user/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.12.15/src/parsers.rs","byte_start":24331,"byte_end":24347,"line_start":869,"line_end":869,"column_start":1,"column_end":17,"is_primary":false,"text":[{"text":"macro_rules! alt {","highlight_start":1,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"tap!","def_site_span":{"file_name":"/home/user/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.12.15/src/parsers.rs","byte_start":33183,"byte_end":33199,"line_start":1194,"line_end":1194,"column_start":1,"column_end":17,"is_primary":false,"text":[{"text":"macro_rules! tap {","highlight_start":1,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"macro invocations at the end of a block are treated as expressions","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to ignore the value produced by the macro, add a semicolon after the invocation of `tap`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/user/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.12.15/src/parsers.rs:1208:41\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1208\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m        tap!($i, $name: call!($f) => $e);\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/user/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.12.15/src/expr.rs:1501:5\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1501\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m    named!(trailer_expr(allow_struct: bool, allow_block: bool) -> Expr, do_parse!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1502\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        mut e: call!(atom_expr, allow_struct, allow_block) >>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1503\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        many0!(alt!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1504\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            tap!(args: and_call => {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1522\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        (e)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1523\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    ));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|______-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: macro invocations at the end of a block are treated as expressions\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: to ignore the value produced by the macro, add a semicolon after the invocation of `tap`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `tap` which comes from the expansion of the macro `named` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"$message_type":"diagnostic","message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"/home/user/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.12.15/src/parsers.rs","byte_start":35994,"byte_end":35995,"line_start":1297,"line_end":1297,"column_start":31,"column_end":32,"is_primary":true,"text":[{"text":"        parens!($i, call!($f));","highlight_start":31,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/user/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.12.15/src/parsers.rs","byte_start":2333,"byte_end":2355,"line_start":69,"line_end":69,"column_start":13,"column_end":35,"is_primary":false,"text":[{"text":"            $submac!(i, $($args)*)","highlight_start":13,"highlight_end":35}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/user/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.12.15/src/expr.rs","byte_start":54093,"byte_end":54206,"line_start":1692,"line_end":1693,"column_start":5,"column_end":50,"is_primary":false,"text":[{"text":"    named!(and_call -> (token::Paren, Punctuated<Expr, Token![,]>),","highlight_start":5,"highlight_end":68},{"text":"           parens!(Punctuated::parse_terminated));","highlight_start":1,"highlight_end":50}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"named!","def_site_span":{"file_name":"/home/user/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.12.15/src/parsers.rs","byte_start":2160,"byte_end":2178,"line_start":66,"line_end":66,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! named {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"parens!","def_site_span":{"file_name":"/home/user/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.12.15/src/parsers.rs","byte_start":35787,"byte_end":35806,"line_start":1291,"line_end":1291,"column_start":1,"column_end":20,"is_primary":false,"text":[{"text":"macro_rules! parens {","highlight_start":1,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"macro invocations at the end of a block are treated as expressions","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to ignore the value produced by the macro, add a semicolon after the invocation of `parens`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/user/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.12.15/src/parsers.rs:1297:31\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1297\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m        parens!($i, call!($f));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                 \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/user/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.12.15/src/expr.rs:1692:5\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1692\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m    named!(and_call -> (token::Paren, Punctuated<Expr, Token![,]>),\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1693\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m           parens!(Punctuated::parse_terminated));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|_________________________________________________-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: macro invocations at the end of a block are treated as expressions\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: to ignore the value produced by the macro, add a semicolon after the invocation of `parens`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `parens` which comes from the expansion of the macro `named` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"$message_type":"diagnostic","message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"/home/user/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.12.15/src/parsers.rs","byte_start":37921,"byte_end":37922,"line_start":1369,"line_end":1369,"column_start":31,"column_end":32,"is_primary":true,"text":[{"text":"        braces!($i, call!($f));","highlight_start":31,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/user/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.12.15/src/parsers.rs","byte_start":27775,"byte_end":27798,"line_start":986,"line_end":986,"column_start":15,"column_end":38,"is_primary":false,"text":[{"text":"        match $submac!($i, $($args)*) {","highlight_start":15,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/user/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.12.15/src/parsers.rs","byte_start":27996,"byte_end":28019,"line_start":991,"line_end":991,"column_start":17,"column_end":40,"is_primary":false,"text":[{"text":"                do_parse!(i, $($rest)*)","highlight_start":17,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/user/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.12.15/src/parsers.rs","byte_start":2333,"byte_end":2355,"line_start":69,"line_end":69,"column_start":13,"column_end":35,"is_primary":false,"text":[{"text":"            $submac!(i, $($args)*)","highlight_start":13,"highlight_end":35}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/user/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.12.15/src/derive.rs","byte_start":4723,"byte_end":4955,"line_start":155,"line_end":159,"column_start":5,"column_end":7,"is_primary":false,"text":[{"text":"    named!(data_enum -> (Option<WhereClause>, token::Brace, Punctuated<Variant, Token![,]>), do_parse!(","highlight_start":5,"highlight_end":104},{"text":"        wh: option!(syn!(WhereClause)) >>","highlight_start":1,"highlight_end":42},{"text":"        data: braces!(Punctuated::parse_terminated) >>","highlight_start":1,"highlight_end":55},{"text":"        (wh, data.0, data.1)","highlight_start":1,"highlight_end":29},{"text":"    ));","highlight_start":1,"highlight_end":7}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"named!","def_site_span":{"file_name":"/home/user/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.12.15/src/parsers.rs","byte_start":2160,"byte_end":2178,"line_start":66,"line_end":66,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! named {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"do_parse!","def_site_span":{"file_name":"/home/user/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.12.15/src/parsers.rs","byte_start":27019,"byte_end":27040,"line_start":963,"line_end":963,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! do_parse {","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"do_parse!","def_site_span":{"file_name":"/home/user/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.12.15/src/parsers.rs","byte_start":27019,"byte_end":27040,"line_start":963,"line_end":963,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! do_parse {","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"braces!","def_site_span":{"file_name":"/home/user/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.12.15/src/parsers.rs","byte_start":37714,"byte_end":37733,"line_start":1363,"line_end":1363,"column_start":1,"column_end":20,"is_primary":false,"text":[{"text":"macro_rules! braces {","highlight_start":1,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"macro invocations at the end of a block are treated as expressions","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to ignore the value produced by the macro, add a semicolon after the invocation of `braces`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/user/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.12.15/src/parsers.rs:1369:31\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1369\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m        braces!($i, call!($f));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                 \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/user/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.12.15/src/derive.rs:155:5\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m155\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m    named!(data_enum -> (Option<WhereClause>, token::Brace, Punctuated<Variant, Token![,]>), do_parse!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m156\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        wh: option!(syn!(WhereClause)) >>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m157\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        data: braces!(Punctuated::parse_terminated) >>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m158\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        (wh, data.0, data.1)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m159\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    ));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|______-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: macro invocations at the end of a block are treated as expressions\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: to ignore the value produced by the macro, add a semicolon after the invocation of `braces`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `braces` which comes from the expansion of the macro `named` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"$message_type":"diagnostic","message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"/home/user/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.12.15/src/parsers.rs","byte_start":35994,"byte_end":35995,"line_start":1297,"line_end":1297,"column_start":31,"column_end":32,"is_primary":true,"text":[{"text":"        parens!($i, call!($f));","highlight_start":31,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/user/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.12.15/src/parsers.rs","byte_start":27775,"byte_end":27798,"line_start":986,"line_end":986,"column_start":15,"column_end":38,"is_primary":false,"text":[{"text":"        match $submac!($i, $($args)*) {","highlight_start":15,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/user/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.12.15/src/parsers.rs","byte_start":2333,"byte_end":2355,"line_start":69,"line_end":69,"column_start":13,"column_end":35,"is_primary":false,"text":[{"text":"            $submac!(i, $($args)*)","highlight_start":13,"highlight_end":35}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/user/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.12.15/src/ty.rs","byte_start":13388,"byte_end":13598,"line_start":438,"line_end":444,"column_start":9,"column_end":11,"is_primary":false,"text":[{"text":"        named!(parse -> Self, do_parse!(","highlight_start":9,"highlight_end":41},{"text":"            data: parens!(Punctuated::parse_terminated) >>","highlight_start":1,"highlight_end":59},{"text":"            (TypeTuple {","highlight_start":1,"highlight_end":25},{"text":"                paren_token: data.0,","highlight_start":1,"highlight_end":37},{"text":"                elems: data.1,","highlight_start":1,"highlight_end":31},{"text":"            })","highlight_start":1,"highlight_end":15},{"text":"        ));","highlight_start":1,"highlight_end":11}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"named!","def_site_span":{"file_name":"/home/user/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.12.15/src/parsers.rs","byte_start":2160,"byte_end":2178,"line_start":66,"line_end":66,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! named {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"do_parse!","def_site_span":{"file_name":"/home/user/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.12.15/src/parsers.rs","byte_start":27019,"byte_end":27040,"line_start":963,"line_end":963,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! do_parse {","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"parens!","def_site_span":{"file_name":"/home/user/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.12.15/src/parsers.rs","byte_start":35787,"byte_end":35806,"line_start":1291,"line_end":1291,"column_start":1,"column_end":20,"is_primary":false,"text":[{"text":"macro_rules! parens {","highlight_start":1,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"macro invocations at the end of a block are treated as expressions","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to ignore the value produced by the macro, add a semicolon after the invocation of `parens`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/user/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.12.15/src/parsers.rs:1297:31\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1297\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m        parens!($i, call!($f));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                 \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/user/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.12.15/src/ty.rs:438:9\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m438\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m        named!(parse -> Self, do_parse!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m439\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            data: parens!(Punctuated::parse_terminated) >>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m440\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            (TypeTuple {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m441\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                paren_token: data.0,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m442\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                elems: data.1,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m443\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            })\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m444\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        ));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|__________-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: macro invocations at the end of a block are treated as expressions\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: to ignore the value produced by the macro, add a semicolon after the invocation of `parens`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `parens` which comes from the expansion of the macro `named` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"$message_type":"diagnostic","message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"/home/user/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.12.15/src/parsers.rs","byte_start":35994,"byte_end":35995,"line_start":1297,"line_end":1297,"column_start":31,"column_end":32,"is_primary":true,"text":[{"text":"        parens!($i, call!($f));","highlight_start":31,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/user/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.12.15/src/parsers.rs","byte_start":27775,"byte_end":27798,"line_start":986,"line_end":986,"column_start":15,"column_end":38,"is_primary":false,"text":[{"text":"        match $submac!($i, $($args)*) {","highlight_start":15,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/user/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.12.15/src/parsers.rs","byte_start":2333,"byte_end":2355,"line_start":69,"line_end":69,"column_start":13,"column_end":35,"is_primary":false,"text":[{"text":"            $submac!(i, $($args)*)","highlight_start":13,"highlight_end":35}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/user/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.12.15/src/path.rs","byte_start":8371,"byte_end":8674,"line_start":296,"line_end":304,"column_start":9,"column_end":11,"is_primary":false,"text":[{"text":"        named!(parse -> Self, do_parse!(","highlight_start":9,"highlight_end":41},{"text":"            data: parens!(Punctuated::parse_terminated) >>","highlight_start":1,"highlight_end":59},{"text":"            output: syn!(ReturnType) >>","highlight_start":1,"highlight_end":40},{"text":"            (ParenthesizedGenericArguments {","highlight_start":1,"highlight_end":45},{"text":"                paren_token: data.0,","highlight_start":1,"highlight_end":37},{"text":"                inputs: data.1,","highlight_start":1,"highlight_end":32},{"text":"                output: output,","highlight_start":1,"highlight_end":32},{"text":"            })","highlight_start":1,"highlight_end":15},{"text":"        ));","highlight_start":1,"highlight_end":11}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"named!","def_site_span":{"file_name":"/home/user/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.12.15/src/parsers.rs","byte_start":2160,"byte_end":2178,"line_start":66,"line_end":66,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! named {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"do_parse!","def_site_span":{"file_name":"/home/user/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.12.15/src/parsers.rs","byte_start":27019,"byte_end":27040,"line_start":963,"line_end":963,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! do_parse {","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"parens!","def_site_span":{"file_name":"/home/user/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.12.15/src/parsers.rs","byte_start":35787,"byte_end":35806,"line_start":1291,"line_end":1291,"column_start":1,"column_end":20,"is_primary":false,"text":[{"text":"macro_rules! parens {","highlight_start":1,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"macro invocations at the end of a block are treated as expressions","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to ignore the value produced by the macro, add a semicolon after the invocation of `parens`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/user/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.12.15/src/parsers.rs:1297:31\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1297\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m        parens!($i, call!($f));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                 \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/user/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.12.15/src/path.rs:296:9\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m296\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m        named!(parse -> Self, do_parse!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m297\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            data: parens!(Punctuated::parse_terminated) >>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m298\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            output: syn!(ReturnType) >>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m299\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            (ParenthesizedGenericArguments {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m303\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            })\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m304\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        ));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|__________-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: macro invocations at the end of a block are treated as expressions\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: to ignore the value produced by the macro, add a semicolon after the invocation of `parens`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `parens` which comes from the expansion of the macro `named` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}}]}
